Understood. Let's get PyJHora and its dependencies set up on your Mac. Since the project is on GitHub, it'll be easy to sync once the environment is ready.

Here's a general plan:

1.  **Prerequisites (Compilers & System Libraries):**
    *   Homebrew (if not already installed): This is the easiest way to get compilers and some libraries.
    *   Python 3 (preferably a version similar to your Windows setup, e.g., Python 3.9, 3.10, or 3.11. Python 3.13 is quite new, so sticking to a slightly older, more established version might be safer for broad package compatibility).
    *   `pip` (comes with Python).
    *   Possibly `gcc` or `clang` (compilers, usually available via Xcode command-line tools or Homebrew).

2.  **Python Virtual Environment:** Strongly recommended to keep dependencies isolated.

3.  **Install PyJHora Dependencies:**
    *   `pyswisseph`: This is a key one and sometimes needs a C compiler.
    *   `pyqt6`: For GUI elements (though we're not using them directly, it's listed as a requirement).
    *   Other dependencies from `requirements.txt` if you have one, or based on the `README.md`: `numpy`, `Pillow`, `requests`, `tzdata`, `astral`, `scipy`, `img2pdf`, `pytz`, `convertdate`, `pandas`, `geocoder`, `timezonefinder`, `geopy`.

4.  **Install PyJHora:**
    *   `pip install PyJHora`

5.  **Ephemeris Files:**
    *   Manually create the `jhora/data/ephe` directory structure in your Python site-packages and copy the ephemeris files there.

6.  **Clone Your GitHub Repository:**
    *   `git clone <your_repo_url>`

Let's go step-by-step:

**Step 1: Prerequisites**

*   **Open Terminal:** You'll be doing most of this in the Mac Terminal.

*   **Check/Install Homebrew:**
    ```bash
    brew --version
    ```
    If it's not installed, or you get an error, install it from [brew.sh](https://brew.sh/):
    ```bash
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    ```
    Follow the on-screen instructions. It might ask you to install Xcode Command Line Tools. If it doesn't, you can install them separately:
    ```bash
    xcode-select --install
    ```

*   **Install/Update Python:**
    Homebrew is a good way to manage Python versions on a Mac.
    ```bash
    brew install python@3.11 # Or python@3.10, python@3.9
    ```
    After installation, Homebrew usually provides instructions on how to make this Python version the default or how to access it (e.g., `python3.11`). You might need to update your `PATH`.
    Check the version:
    ```bash
    python3 --version # Or python3.11 --version
    pip3 --version    # Or pip3.11 --version
    ```

**Step 2: Python Virtual Environment**

This is highly recommended. Let's say your project will live in `~/Projects/PyJHoraAstrology`.

```bash
mkdir -p ~/Projects/PyJHoraAstrology
cd ~/Projects/PyJHoraAstrology

# Create a virtual environment (using the Python version you just installed)
# Replace 'python3.11' if you installed a different version
python3.11 -m venv venv_pyjhora

# Activate the virtual environment
source venv_pyjhora/bin/activate

# Your terminal prompt should now change, indicating you're in the venv
# To deactivate later, simply type: deactivate
```

**Step 3: Install Dependencies (inside the activated virtual environment)**

*   **pyswisseph:**
    ```bash
    pip install pyswisseph
    ```
    This might compile from source. If it fails, it might be due to missing compiler tools (Xcode command-line tools should cover this).

*   **pyqt6:**
    ```bash
    pip install pyqt6 pyqt6-tools
    ```

*   **Other Dependencies:**
    If you have a `requirements.txt` file in your GitHub repo for this project, you can use that. If not, install them one by one or as a group:
    ```bash
    pip install numpy Pillow requests tzdata astral scipy img2pdf pytz convertdate pandas geocoder timezonefinder geopy
    ```

**Step 4: Install PyJHora (inside the activated virtual environment)**

```bash
pip install PyJHora
```

**Step 5: Ephemeris Files**

This is the manual step.

1.  **Find your site-packages directory for the virtual environment:**
    While the virtual environment is active, run:
    ```python
    # In a Python interpreter within the venv
    import site
    print(site.getsitepackages())
    ```
    This will give you a list of paths. One of them will be inside your `venv_pyjhora` directory. For example, it might be something like:
    `~/Projects/PyJHoraAstrology/venv_pyjhora/lib/python3.11/site-packages`

2.  **Navigate to that site-packages directory in Finder or Terminal:**
    Inside this `site-packages` directory, you should now find a `jhora` folder (created by `pip install PyJHora`).

3.  **Create the ephemeris directory structure:**
    ```bash
    # Make sure you are in the correct site-packages directory
    # cd ~/Projects/PyJHoraAstrology/venv_pyjhora/lib/python3.11/site-packages

    mkdir -p jhora/data/ephe
    ```

4.  **Copy the Ephemeris Files:**
    You need the `.se1` files (e.g., `seplm18.se1`, `sefstars.se1`, etc.).
    *   If you have them on your Mac already (e.g., from a previous download or another project), copy them into the `jhora/data/ephe` directory you just created.
    *   If not, you'll need to download them from the PyJHora GitHub repository: `https://github.com/naturalstupid/pyjhora/tree/master/src/jhora/data/ephe` (or the specific path mentioned in the `README.md` if it changed). Download all files from that `ephe` folder on GitHub and place them into your local `jhora/data/ephe` directory.

**Step 6: Clone Your GitHub Repository**

Go to the directory where you want to keep your project code (e.g., `~/Projects/PyJHoraAstrology` but *outside* the `venv_pyjhora` folder itself).

```bash
cd ~/Projects/PyJHoraAstrology
git clone <your_github_repo_url_here> # e.g., git clone https://github.com/your_username/your_project_name.git
cd your_project_name # Navigate into your cloned project directory
```

Now, your project code (including `test_pyjhora.py`) will be in this `your_project_name` folder.

**Step 7: Test**

1.  Make sure your virtual environment is still active (`source ~/Projects/PyJHoraAstrology/venv_pyjhora/bin/activate` if it's not).
2.  Navigate into your cloned project directory (`cd ~/Projects/PyJHoraAstrology/your_project_name`).
3.  Try running your Python script:
    ```bash
    python test_pyjhora.py
    ```

**Troubleshooting Tips for Mac:**

*   **Permissions:** If `pip install` fails with permission errors, ensure you're *not* using `sudo` with `pip` when installing into a virtual environment. The virtual environment is owned by your user.
*   **Compiler Issues for `pyswisseph`:**
    *   Ensure Xcode Command Line Tools are installed: `xcode-select --install`
    *   Sometimes, explicitly telling `pip` where to find `swisseph.h` (if `pyswisseph` bundles it or if you installed `swisseph` via Homebrew separately) can help, but usually `pip install pyswisseph` handles this.
*   **`jhora` vs. `pyjhora` import path:** The library installs its top-level package as `jhora`. So, imports should be `from jhora...` not `from pyjhora...`. This seems consistent with your Windows experience.
*   **Ephemeris File Path:** Double-check the exact path to `jhora/data/ephe` within your virtual environment's `site-packages`. Errors like "sweph error: file ... not found" usually point to this.

Let me know how these steps go. If you encounter specific errors at any stage, please paste the full error message, and we can work through it. Once the environment is up and your script runs, we can pick up where we left off with analyzing the Chara Dasha output!